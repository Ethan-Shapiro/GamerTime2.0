version: '3.8'

services:
  nginx:
      image: nginx:1.15
      container_name: nginx
      volumes:
          - ../:/var/www
          - ./nginx-dev.conf:/etc/nginx/conf.d/default.conf
      ports:
          - 80:80
      networks:
          - my-network
      depends_on:
          - flask-api
          - client

  flask-api:
    container_name: server
    restart: always
    command: flask run --reload
    build:
      context: ./backend/
      dockerfile: Dockerfile
    ports:
      - "5050:5000"
    volumes:
      - ./backend:/usr/src/app

    networks:
      my-network:
          aliases:
              - server
    env_file:
      - dev.env
    depends_on:
      - db

  db:
    container_name: GamerTimeDB
    image: postgres:14.5-alpine
    ports:
      - '5433:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=testing
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    networks:
      my-network:
          aliases:
              - GamerTimeDB
    
  client:
    build:
      context: ./frontend/
      dockerfile: Dockerfile
    command: ["npm", "start"]
    volumes:
      - ./frontend:/frontend
      - node-modules:/frontend/node_modules
    environment:
      - NODE_ENV=development
    networks:
      my-network:
          aliases:
              - client
    ports:
      - '3000:3000'
    depends_on:
      - flask-api


volumes:
  postgres_data:
  node-modules:

networks:
 my-network: